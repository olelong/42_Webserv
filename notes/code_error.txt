/************ STATUS CODE ***********/
			WITH RFC 26.16

CLIENT ERROR :
============

/* 400 Bad Request */
   ---------------

=> Cas ou il y a une erreur de syntaxte dans la requete,				// UTILE pour moi
une requete invalide...

The 400 (Bad Request) status code indicates that the server cannot or
will not process the request due to something that is perceived to be
a client error (e.g., malformed request syntax, invalid request
message framing, or deceptive request routing).

/* 403 Forbidden */
=> Cas ou la requête demande un accès a quelque chose dont il n'a 
pas les droits.

The 403 (Forbidden) status code indicates that the server understood
the request but refuses to authorize it.  A server that wishes to
make public why the request has been forbidden can describe that
reason in the response payload (if any).


/* 404 Not Found */ 
   -------------

=> Peut être plus dans la partie server que l'on vérifie 
si l'on peut accéder au fichier demandé.

The 404 (Not Found) status code indicates that the origin server did
not find a current representation for the target resource or is not
willing to disclose that one exists.


/* 405 Method Not Allowed */											// UTILE pour moi
   ----------------------

=> Indique que la méthode recue est connue mais pas supportée.
Peut être l'utiliser au début lorsque je récupére la méthode,
si c'est ni GET ni POST ni DELETE renvoyer 405.

The 405 (Method Not Allowed) status code indicates that the method
received in the request-line is known by the origin server but not
supported by the target resource.  The origin server MUST generate an
Allow header field in a 405 response containing a list of the target
resource's currently supported methods.


/* 406 Not Acceptable */
   ------------------

=> Je sais pas si on l'utilisera

The 406 (Not Acceptable) status code indicates that the target
resource does not have a current representation that would be
acceptable to the user agent, according to the proactive negotiation
header fields received in the request (Section 5.3), and the server
is unwilling to supply a default representation.


/* 408 Request Timeout */
   -------------------

=> Renvoie cette erreur si le serveur ne recois pas de requête complète
avant la fin du temps imparti. Plutôt dans la partie serveur non ?

The 408 (Request Timeout) status code indicates that the server did
not receive a complete request message within the time that it was
prepared to wait.  A server SHOULD send the "close" connection option
in the response, since 408 implies that
the server has decided to close the connection rather than continue
waiting.  If the client has an outstanding request in transit, the
client MAY repeat that request on a new connection.


/* 409 Conflict */
   ------------

=> Je sais pas trop

The 409 (Conflict) status code indicates that the request could not
be completed due to a conflict with the current state of the target
resource.  This code is used in situations where the user might be
able to resolve the conflict and resubmit the request.  The server
SHOULD generate a payload that includes enough information for a user
to recognize the source of the conflict.


/* 410 GONE */
   --------

=> Indique qu'il n'est plus possbile d'accéder a la ressource ciblé
mais si le serveur ne sait pas il renvoie à la place une error 404.

The 410 (Gone) status code indicates that access to the target
resource is no longer available at the origin server and that this
condition is likely to be permanent.  If the origin server does not
know, or has no facility to determine, whether or not the condition
is permanent, the status code 404 (Not Found) ought to be used
instead.


/* 411 Length Required */												// UTILE pour moi
   -------------------

=> Cas ou le serveur recoit une requête sans content-length alors qu'il
en nécsessite un! Cas du body sans content-length par exemple.

The 411 (Length Required) status code indicates that the server
refuses to accept the request without a defined Content-Length.
The client MAY repeat the request if
it adds a valid Content-Length header field containing the length of
the message body in the request message.

/* 413 Playload Too Large */
   ----------------------

=> Plutôt côté serveur je pense

The 413 (Payload Too Large) status code indicates that the server is
refusing to process a request because the request payload is larger
than the server is willing or able to process. 


/* 414 URI Too Long */
   ----------------

=> ?

The 414 (URI Too Long) status code indicates that the server is
refusing to service the request because the request-target
is longer than the server is willing to interpret.





