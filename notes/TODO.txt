
							/**** WEBSERV ****/

TODO:

-	=> header accept non obligatoire mais du coup gerer le cas ou il y en a pas pour le content type car
	dans ce cas le client accepte tous les types donc mettre un par defaut ou un lie a l'extension du fichier si il y en a une?
	
-	Reponse avec date et heure ? obligatoire dans une reponse sauf cas exceptions cf.TODO_doc.txt

-	la request-line doit avoir les 3 arguments et ses arguments doivent etre separes seulement par des espaces,
	pas de CR ou LF. En gros pas de nouvelle ligne entre les elements => je pense que c est gere car je lis ligne par ligne
	et compare le nombre d'argument et tout => OK mais a tester

-	le client peut envoyer dans la requete une date header que dans une 
	requete avec un body donc que dans une requete post mais elle n est 
	pas obligatoire pour le client

-	body entity present que quand un message-body est present.

-	Si une requete contient un body-entity, il doit inclure un Content-Type cf.TODO_doc.txt

-	si le request-URI est un PATH absolue donc permet d'identifier la ressource sur le serveur d'origine ou
	le gateway alors il doit obligatoirement il y avoir la network location de l'URI dans un header Host
	=> Donc Host header requete obligatoire dans ce cas la.

-	REQUEST-URI : file pas forcement avec un slash 
		Request-URI    = "*" | absoluteURI | abs_path | authority

-	REQUEST-URI encoding : "% HEX HEX" decoder le fichier ou alors le serveur peut renvoyer un status code pour invalide request-uris 
	avec un code approprie

-	Doit on check tous les Accept-Encoding language charset etc pour s'adapter au mieux au cient?

-	Si la request URI est un path absolue, l host fait partie de la request uri donc tout autre
	host header de la requete doit etre ignoree.
	Si ce n'est pas un absolute path et qu il y a un header host c'est lui qui determine le host.
	Si l'host determine par l'une des regles au dessus n'est pas valide sur le serveur alors
	la reponse doit etre une erreur 400 (bad request).

-	Check avec wael reponse header field et request de TODO_doc.txt

-	HTTP/1.1 recipients MUST respect the charset label si il y en a un donnee par le client

-	Peut etre ajouter dans la reponse le header server?

-	Si il y a un content-Type dans la requete, renvoyer le meme dans la reponse?

-	Ajouter Origin header dans struct AnalysedReq ? pour savoir que lest le serveur d'origine

-	POST : surement utile pour nous qu avec CGI
-	DELETE : surement utile pour nous qu avec CGI
-	CGI : regarder ce qui est interessant a renvoyer a wael pour une requete
	CGI cf.schema envoye par wael de l'architecture d utilisation de cgi

-	Ajouter a ma reponse si il y a des infos supplementaires a montrer 
	si c est une methode post ou delete

-	voir comment remplir les essential headers des autres methodes dans analyse()
-	Faire pleins de tests




PARSING ERROR:

-	savoir si la ligne accept peut finir par un ; ou non si non rajouter erreur 

-------

-	type MIME de content-type forcement : type/sous_type, 
	si dans le type MIME il y a pas de slash "/" = ERROR
	Verifier pour tous les type MIME de ACCEPT => OKKKK 
-	Function ignoreQ() plus clean et erase bien de
q jusqu a la prochaine virgule ou point virgule
-	Si le code status = 426 -> renvoye dans la reponse le protocole a utiliser dans un header Upgrade => OK juste verifier si on laisse code error
-	Pas deux fois le meme header, pas de headers en doublons => OK
-	Si il y a un body dans la requete verifier que c est bien la meme que content-length => OK
-	Si il y a un body verifie qu'il y a bien un content-length sinon error => OK
-	headers sans ":" => OK 
-	ignorer fin du accept q= pour eviter que si l'on me demande un fichier .q 
	=> ignorer q= dans le header accept de GET POST ou DELETE => OK
	qu il prenne en compte celui la alors que c'en est pas un => OK
-	requete sans accept header => OK 
-	cas ou il n y a pas de "." dans le fichier et que c est pas le 1er html => OK
-	=> Enlever le fait que si le fichier n a pas de points que ce soit une erreur
	car peut ne pas avoir d'extensions => OK on retourne le premier contenu de accept si il y a pas de "."


-	Mettre le body dans un fichier pour CGI pour qu'il puisse le compiler : surement dans la partie de wael du coup juste lui renvoyer le body



--------------------------------------



FINISHED:

-	Une partie d'analyse peut etre utilisee pour les 3 methodes comme: le type, le file par exemple, j'ai mis juste l'url que pour GET pour l'instant => OK 
-	Tous les commentaires en anglais et bien ecrit => OK
-	Mettre Code error correspondant => OK normalement c est bon
-	Decouper en differentes fonctions le constructeur => OK 
-	leaks => OK
-	Differencier les headers du body de la requete => OK
-	createResponse renvoie code error 400 pour requete de 1ere page html POURQUOI ? pareil pour la derniere du main POURQUOI ? => RESOLU OK 
-	Remplir le body request / separer headers et body => OK
-   reverifier check ext car ne fonctionne pas pour find le content type si il est au milieu ou fin dÂ´accept => OK
-	Error dans le main, dans la partie fill headers of the request
	1ere requete avec body, error in fill map headers dans le constructor() => OK
	des qu il y a une ligne vide.
-	Ajouter "return ;" en cas d'erreur pour s'arreter dans la fonction. => OK normalement
-	Abort createResponse => OK
-	Add url dans get dans analyse() si il y en a une => OK
-	AnalysedReq struct problemes -> OK
-	Extension check -> content type => OK
content-type: find extension si il la trouve -> pos - la derniere , ou ; d'avant et si non remplir avec la 1ere proposition  => OK
-	Analysedequest url, map essential headers  pour GET=> OK
-	m'occuper de la 1ere page html demande => OK
 (renvoie le content-type d un text/html)
 -	content-type: pb rentre toujours dans le if ou il a trouve l'ext alors que normalement non => OK
 -	Ajouter dans la premiere partie du constructeur de verifier le HTTP/1.1 et qu il y  adonc bien 3 argument dans la premiere ligne => OK
